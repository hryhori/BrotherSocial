{"ast":null,"code":"var _jsxFileName = \"/Users/gregmirny/Documents/learnreact/src/components/Main/Profile/Profileinfo/Profileinfo.jsx\";\nimport s from \"./Profileinfo.module.css\";\nimport Preloader from \"../../../common/Preloader/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ProfileInfo = props => {\n  let social = () => {\n    if (props.contact) {\n      return Object.keys(props.contacts).map(contact => {\n        if (contact) {\n          Object.keys(props.link_icons).map(icon => {\n            if (icon == contact) {\n              return /*#__PURE__*/_jsxDEV(\"a\", {\n                className: `s.${contact}`,\n                href: props.contacts[contact],\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: props.link_icons[icon],\n                  alt: \"\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 17,\n                  columnNumber: 19\n                }, this)\n              }, props.contacts[contact], false, {\n                fileName: _jsxFileName,\n                lineNumber: 12,\n                columnNumber: 17\n              }, this);\n            }\n          });\n        }\n      });\n    }\n  };\n\n  let photo = () => {\n    if (props.photos == null) {\n      return /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.ava,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: props.photos.large,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: s.profile_wrapper,\n    children: [photo(), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: props.aboutMe\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.user_links,\n        children: social()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: s.friends_block,\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Friends:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: s.my_friends\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ProfileInfo;\nexport default ProfileInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProfileInfo\");","map":{"version":3,"names":["s","Preloader","ProfileInfo","props","social","contact","Object","keys","contacts","map","link_icons","icon","photo","photos","ava","large","profile_wrapper","aboutMe","user_links","friends_block","my_friends"],"sources":["/Users/gregmirny/Documents/learnreact/src/components/Main/Profile/Profileinfo/Profileinfo.jsx"],"sourcesContent":["import s from \"./Profileinfo.module.css\";\r\nimport Preloader from \"../../../common/Preloader/Preloader\";\r\n\r\nconst ProfileInfo = (props) => {\r\n  let social = () => {\r\n    if (props.contact) {\r\n      return Object.keys(props.contacts).map((contact) => {\r\n        if (contact) {\r\n          Object.keys(props.link_icons).map((icon) => {\r\n            if (icon == contact) {\r\n              return (\r\n                <a\r\n                  key={props.contacts[contact]}\r\n                  className={`s.${contact}`}\r\n                  href={props.contacts[contact]}\r\n                >\r\n                  <img src={props.link_icons[icon]} alt=\"\" />\r\n                </a>\r\n              );\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  };\r\n  let photo = () => {\r\n    if (props.photos == null) {\r\n      return <Preloader />;\r\n    } else {\r\n      return (\r\n        <div className={s.ava}>\r\n          <img src={props.photos.large} alt=\"\" />\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div className={s.profile_wrapper}>\r\n      {photo()}\r\n      <div className=\"status\">\r\n        <p>{props.aboutMe}</p>\r\n        <div className={s.user_links}>{social()}</div>\r\n      </div>\r\n      <div className={s.friends_block}>\r\n        <h5>Friends:</h5>\r\n        <div className={s.my_friends}>\r\n          {/* {props.friends.map((friend) => (\r\n          <div className={s.my_friend} key={friend.id}>\r\n            <div className={s.friend_ava}>\r\n            <i className=\"material-icons\">account_circle</i>\r\n            </div>\r\n            <div className={s.friend_name}>{friend.name}</div>\r\n          </div>\r\n        ))} */}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfileInfo;\r\n"],"mappings":";AAAA,OAAOA,CAAP,MAAc,0BAAd;AACA,OAAOC,SAAP,MAAsB,qCAAtB;;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;EAC7B,IAAIC,MAAM,GAAG,MAAM;IACjB,IAAID,KAAK,CAACE,OAAV,EAAmB;MACjB,OAAOC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACK,QAAlB,EAA4BC,GAA5B,CAAiCJ,OAAD,IAAa;QAClD,IAAIA,OAAJ,EAAa;UACXC,MAAM,CAACC,IAAP,CAAYJ,KAAK,CAACO,UAAlB,EAA8BD,GAA9B,CAAmCE,IAAD,IAAU;YAC1C,IAAIA,IAAI,IAAIN,OAAZ,EAAqB;cACnB,oBACE;gBAEE,SAAS,EAAG,KAAIA,OAAQ,EAF1B;gBAGE,IAAI,EAAEF,KAAK,CAACK,QAAN,CAAeH,OAAf,CAHR;gBAAA,uBAKE;kBAAK,GAAG,EAAEF,KAAK,CAACO,UAAN,CAAiBC,IAAjB,CAAV;kBAAkC,GAAG,EAAC;gBAAtC;kBAAA;kBAAA;kBAAA;gBAAA;cALF,GACOR,KAAK,CAACK,QAAN,CAAeH,OAAf,CADP;gBAAA;gBAAA;gBAAA;cAAA,QADF;YASD;UACF,CAZD;QAaD;MACF,CAhBM,CAAP;IAiBD;EACF,CApBD;;EAqBA,IAAIO,KAAK,GAAG,MAAM;IAChB,IAAIT,KAAK,CAACU,MAAN,IAAgB,IAApB,EAA0B;MACxB,oBAAO,QAAC,SAAD;QAAA;QAAA;QAAA;MAAA,QAAP;IACD,CAFD,MAEO;MACL,oBACE;QAAK,SAAS,EAAEb,CAAC,CAACc,GAAlB;QAAA,uBACE;UAAK,GAAG,EAAEX,KAAK,CAACU,MAAN,CAAaE,KAAvB;UAA8B,GAAG,EAAC;QAAlC;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF;IAKD;EACF,CAVD;;EAWA,oBACE;IAAK,SAAS,EAAEf,CAAC,CAACgB,eAAlB;IAAA,WACGJ,KAAK,EADR,eAEE;MAAK,SAAS,EAAC,QAAf;MAAA,wBACE;QAAA,UAAIT,KAAK,CAACc;MAAV;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAEjB,CAAC,CAACkB,UAAlB;QAAA,UAA+Bd,MAAM;MAArC;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QAFF,eAME;MAAK,SAAS,EAAEJ,CAAC,CAACmB,aAAlB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAEnB,CAAC,CAACoB;MAAlB;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD,CAvDD;;KAAMlB,W;AAyDN,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}